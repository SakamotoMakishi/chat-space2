= render 'layouts/header'
= render 'layouts/flash_message'
= render 'layouts/post_message'
.root_page
  = render 'layouts/left_bar'
  .root_page__right
    .root_page__right__contents
      #menus.all_user
        .all_user__contents.cardHolder
          - @user.reverse_each do |user|
            = link_to user_path(user),class:"all_user__contents__link card" do
              .contents_users
                .user_image
                  = image_tag avatar(user),crass:"user_avatar",style: "width: 40px;height:40px;border-radius:50%;box-shadow:rgba(133, 241, 255, 0.856)0px 0px 2px 2px;"
                .user_follow_count
                  %text フォロー
                  %text.count_color
                    = "#{user.followings.count}"
                .user_follow_count
                  %text フォロワー
                  %text.count_color
                    = "#{user.reverse_of_relationships.count}"
                .user_name
                  = "#{user.nickname}"
                -if current_user.following?(user)
                  .user_follow
                    フォロー中
                -if !user.profile.blank?
                  .user_profile
                    = "#{user.profile}"
        - unless @user.include?(@user_last)
          .page-load-status
            .infinite-scroll-request
              = image_tag src="/assets/loading-1.gif",style:"width:60px;height:30px;"
        = paginate @user
:javascript
  $(function() {
    $('#menus').infiniteScroll({// 監視してほしい範囲のタグのクラス
    path : 'nav.pagination a[rel=next]',  // 次ページのリンク(kaminari使ってる)
     append : '.all_user__contents.cardHolder',  // 読まれたら追加していくタグのクラス
     history: false,  // ページが読まれてもURLを変えない
     prefill: true,  // 一番下まで読まれる前にpathを読み込む
     status: '.page-load-status'  // 読み込み中表示したいタグのクラス
    })
  })
  var boxes = document.querySelectorAll('.card');
  var delay = .1; // seconds
  var col = 0;
  var row = 0;
  for (var i = 0; i < boxes.length; i++) {
    if(boxes[i].offsetTop > last) {
      row = row+1;
      col = 0;
    }
    var last = boxes[i].offsetTop;
    
    boxes[i].style.animationDelay = (row + col) * delay + 's';  
    col = col+1;
  }